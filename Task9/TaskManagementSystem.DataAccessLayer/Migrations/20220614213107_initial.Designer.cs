// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskManagementSystem.DataAccessLayer;

#nullable disable

namespace TaskManagementSystem.DataAccessLayer.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220614213107_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TaskManagementSystem.DataAccessLayer.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TeamLead"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Senior"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Middle"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Junior"
                        });
                });

            modelBuilder.Entity("TaskManagementSystem.DataAccessLayer.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PerformerId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("PerformerId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatorId = 1,
                            Description = "",
                            Name = "Create",
                            PerformerId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatorId = 2,
                            Description = "",
                            Name = "Push",
                            PerformerId = 3,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatorId = 3,
                            Description = "",
                            Name = "Delete",
                            PerformerId = 4,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatorId = 4,
                            Description = "",
                            Name = "Read",
                            PerformerId = 5,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatorId = 5,
                            Description = "",
                            Name = "Edit",
                            PerformerId = 1,
                            Status = 0
                        });
                });

            modelBuilder.Entity("TaskManagementSystem.DataAccessLayer.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ivan@gmail.com",
                            FullName = "Ivan Ivanov",
                            Password = "ivanivan",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "vasya@gmail.com",
                            FullName = "Vasya Vasiliev",
                            Password = "123",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "petya@gmail.com",
                            FullName = "Petya Petrov",
                            Password = "qwerty",
                            RoleId = 3
                        },
                        new
                        {
                            Id = 4,
                            Email = "Katya@gmail.com",
                            FullName = "Katya Vasilenko",
                            Password = "qwerty123",
                            RoleId = 4
                        },
                        new
                        {
                            Id = 5,
                            Email = "vika@gmail.com",
                            FullName = "Vika Viktorieva",
                            Password = "qwerty111",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("TaskManagementSystem.DataAccessLayer.Task", b =>
                {
                    b.HasOne("TaskManagementSystem.DataAccessLayer.User", "Creator")
                        .WithMany("TasksCreator")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskManagementSystem.DataAccessLayer.User", "Performer")
                        .WithMany("TasksPerformer")
                        .HasForeignKey("PerformerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Creator");

                    b.Navigation("Performer");
                });

            modelBuilder.Entity("TaskManagementSystem.DataAccessLayer.User", b =>
                {
                    b.HasOne("TaskManagementSystem.DataAccessLayer.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TaskManagementSystem.DataAccessLayer.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TaskManagementSystem.DataAccessLayer.User", b =>
                {
                    b.Navigation("TasksCreator");

                    b.Navigation("TasksPerformer");
                });
#pragma warning restore 612, 618
        }
    }
}
